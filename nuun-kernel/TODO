TODO
====
- Production Mode , Developement Mode 
  - à rajouter dans le Context aussi pour les plugins
  - sert à configure l'injector
- add multiple binding 
- Requests : 
    - Specification<Class<?>> apply
    - add meta annotations
    - method with annotation
    - fields with annotation
- Plugin dependencies : give to plugin the required plugin singleton instances it asks for. @ the init time.
- Request : add Request constraints : Unique, Maxi, Mini
- Parameter kernel for Plugin Strict Mode (all plugins or zero) or Degraded Mode (Not all can start , beware of dependencies)  
- ajouter lifecycle autour des listener
  comme dans https://bitbucket.org/peachjean/peachguice/src/660df406811cde318658821b8fae3548b62247b3/peachguice-base/src/main/java/net/peachjean/guice/PeachGuiceServletContextListener.java?at=default
- KernelModule => dependencyInjectionDef + provider pour autre di que guice
- add clear reporting in the log
- add clear run fix fix fix behaviour
  - Exception system rewrite (http://northconcepts.com/blog/2013/01/18/6-tips-to-improve-your-exception-handling/) 
- add binding graph generation facilities through plugins: 
  - image plugin  
- plugin dependencyInjection overriding via overideDependencyInjectionDef
~ replace LogPlugin implementation by the apache onami one. 
- Properties files  
  - Add mandatory properties (default true)
  - Add duplicate properties warning or error ( default error )
  - (DONE)transform into a real plugin 
- plugin exclusion by name (regex) 
- JNDI avec JSR250 (@Resource, @PreDestroy, @PostConstruct) avec MycilaGuice
- Osgi avec Peaberry
  - creer un type maven "nuun" (component.xml) cachant veritablement le plugin maven-felix-plugin 
    qui créer un bundle osgi en faisant clean install  
- JSR303 (validation)
- JSR107 (cache)
- Créer les org.nuunframework.kernel.plugin.provider.DependencyInjectionProvider 
  - handle 
   - from Guice 
   - to Something else

      Essayer avec Spring et PetiteContainer 
      Spring integration : read resources file *-context.xml
      http://jodd.org/api/jodd/petite/PetiteBeans.html 
      + 
      http://grepcode.com/file/repo1.maven.org/maven2/org.apache.rave/rave-opensocial-core/0.11/org/apache/rave/inject/SpringContextProvider.java#SpringContextProvider
      http://code.google.com/p/guice-spring/source/browse/trunk/src/main/java/com/googlecode/guicespring/

DONE
====
- add resource scanners
- Plugin requirement
- Plugin Handling
- Multiple packageroot
- Add Module/Class automatic binding - OK 
- Log Handling - OK
- JSR330      - OK
- Ignore   - OK
- Properties files > Nominal - OK